{"version":3,"sources":["components/NavBar.js","components/Loading.js","components/Dropdown.js","components/Channels.js","components/SearchBar.js","components/Channel.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","state","react_default","a","createElement","Fragment","className","react_router_dom","to","data-toggle","data-target","id","Component","Loading","react_loader_spinner_default","type","color","height","width","React","Dropdown","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","category","bind","assertThisInitialized","e","preventDefault","console","log","target","value","filterByCategory","class","onChange","query","setState","Channels","channels","filteredChannels","abortController","AbortController","_this2","fetch","signal","then","response","json","data","sources","catch","err","prevProps","prevState","_this3","filteredData","filter","obj","_this$state","Dropdown_Dropdown","map","channel","concat","style","textDecoration","name","charAt","toUpperCase","slice","description","Loading_Loading","SearchBar","updateSearchQuery","placeholder","searchQuery","Channel","ChannelData","match","params","articles","abort","components_SearchBar","article","src","urlToImage","title","href","url","App","components_NavBar","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.47e0136b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nclass NavBar extends Component {\n  state = {};\n  render() {\n    return (\n      <React.Fragment>\n        <nav className=\"navbar navbar-expand-md navbar-dark\">\n          <div className=\"container\">\n            <Link to=\"/\" className=\"navbar-brand\">\n              News App\n            </Link>\n            <button\n              className=\"navbar-toggler bg-secondary collapsed\"\n              data-toggle=\"collapse\"\n              data-target=\"#navbarCollapse\"\n            >\n              <span className=\"navbar-toggler-icon\" />\n            </button>\n            <div className=\"collapse navbar-collapse \" id=\"navbarCollapse\" />\n          </div>\n        </nav>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default NavBar;\n","import React from 'react';\nimport Loader from 'react-loader-spinner';\nexport default class Loading extends React.Component {\n    render() {\n     return(\n      <Loader\n         type=\"TailSpin\"\n         color=\"#00BFFF\"\n         height=\"300\"\n         width=\"300\"\n      />\n     );\n    }\n }","import React from 'react';\nimport {filterByCategory} from './Channels';\nexport default class Dropdown extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.category = this.category.bind(this);\n    }\n    category(e){\n        e.preventDefault();\n        console.log(e.target.value);\n        filterByCategory(e.target.value);\n    }\n    render() {\n     return(\n         <div class=\"container\">\n         <h4>Filter by Criteria</h4>\n         <select class=\"browser-default custom-select custom-select-lg mb-3\" onChange={this.category}>\n            <option value=\"business\">Business</option>\n            <option value=\"entertainment\">Entertainment</option>\n            <option value=\"general\">General</option>\n            <option value=\"health\">Health</option>\n            <option value=\"science\">Science</option>\n            <option value=\"sports\">Sports</option>\n            <option value=\"technology\">Technology</option>\n        </select>\n        </div>\n     );\n    }\n }","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Loading from './Loading';\nimport Dropdown from './Dropdown';\n\nexport function filterByCategory(query){\n    this.setState({category:query});\n    console.log(query);\n}\nclass Channels extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      channels: null,\n      category:null,\n      filteredChannels:null\n    };\n    filterByCategory = filterByCategory.bind(this);\n    this.abortController = new AbortController();\n  }\n  componentDidMount() {\n    fetch(\n      \"https://newsapi.org/v2/sources?apiKey=0279b927613e40debd2a3f4264057868\",\n      {signal:this.abortController.signal}\n    )\n      .then(response => response.json())\n      .then(data =>\n        {\n          this.setState({ channels: data.sources })\n        } )\n        .catch(err=>{\n          console.log(err);\n        });\n  }\n  componentDidUpdate(prevProps,prevState){\n      if(prevState.category !== this.state.category){\n\n      const filteredData = this.state.channels.filter((obj)=>{\n          if (obj.category == this.state.category){\n              return true;\n          }\n      });\n      this.setState({filteredChannels:filteredData});\n      }\n  }\n\n  componentWillUnmount(){\n\n  }\n  render() {\n    const { channels,filteredChannels } = this.state;\n    console.log(channels);\n    if(filteredChannels!==null){\n           return (\n        <div class=\"container\">\n          <h4 class=\"text-center text-light\">New's Channels</h4>\n          <Dropdown />\n          {filteredChannels.map(channel => (\n              <div class=\"card bg-light rounded p-1 mb-4\">\n                <Link to={`/channel/${channel.id}`} style={{textDecoration:'None'}}>\n                <div class=\"card-header d-flex justify-content-between bg-dark\">\n                  <h5 class=\"text-light\">{channel.name}</h5>\n                  <h5 class=\"text-danger\"><span class=\"text-info mr-2\">Category:</span>{channel.category.charAt(0).toUpperCase()+channel.category.slice(1)}</h5>\n                  </div>\n                <div class=\"card-body\">\n                  <h5 class=\"card-title text-dark\">{channel.description}</h5>\n                </div>\n                </Link>\n              </div>\n          ))}\n          </div>\n      );\n    }\n    else if (channels !== null) {\n      return (\n        <div>\n          <h4 class=\"text-center text-light\">New's Channels</h4>\n          <Dropdown />\n          <div class=\"container\">\n          {channels.map(channel => (\n              <div class=\"card bg-light rounded p-1 mb-4\">\n                <Link to={`/channel/${channel.id}`} style={{textDecoration:'None'}}>\n                <div class=\"card-header d-flex justify-content-between bg-dark\">\n                  <h5 class=\"text-light\">{channel.name}</h5>\n                  <h5 class=\"text-danger\"><span class=\"text-info mr-2\">Category:</span>{channel.category.charAt(0).toUpperCase()+channel.category.slice(1)}</h5>\n                  </div>\n                <div class=\"card-body\">\n                  <h5 class=\"card-title text-dark\">{channel.description}</h5>\n\n                </div>\n                </Link>\n              </div>\n          ))}\n          </div>\n        </div>\n      );\n    } else {\n      return (<div class=\"text-center\"><Loading/></div>);\n    }\n  }\n}\n\nexport default Channels;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {updateSearchQuery} from './Channel'\nclass SearchBar extends Component {\n  constructor(props){\n      super(props);\n      this.state={\n          query:null\n      }\n  }\n  searchQuery(e){\n      updateSearchQuery(e.target.value);\n  }\n  render() {\n    return (\n      <React.Fragment>\n      <div class=\"container mb-3\">\n         <div class=\"input-group input-group-lg\">\n         <div class=\"input-group-btn mr-1\">\n            <button class=\"btn btn-default bg-light\" type=\"submit\"><i class=\"fas fa-2x fa fa-search\"></i></button>\n        </div>\n            <input type=\"text\" class=\"form-control bg-light\" placeholder=\"Search\" onChange={this.searchQuery}/>\n        </div>\n     </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SearchBar from './SearchBar';\nimport Loading from './Loading';\nimport '../Hover.css'\nexport function updateSearchQuery(query){\n this.setState({searchQuery:query});\n}\nclass Channel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ChannelData: null,searchQuery:null };\n    updateSearchQuery = updateSearchQuery.bind(this);\n\n  }\n  abortController = new AbortController();\n   /* myStyle = {\n        cardhover:{\n            backgroundColor:\"red\"\n        }\n  }*/\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    fetch(\n      `https://newsapi.org/v2/everything?sources=${id}&pageSize=100&apiKey=0279b927613e40debd2a3f4264057868`\n    ,{\n      signal:this.abortController.signal\n    })\n      .then(response => response.json())\n      .then(data =>\n        {\n        this.setState({ ChannelData: data.articles })\n        })\n        .catch(err=>{\n          console.log(err);\n        })\n  }\n  componentDidUpdate(prevProps,prevState){\n    const { id } = this.props.match.params;\n\n      if(prevState.searchQuery!==this.state.searchQuery){\n        fetch(\n      `https://newsapi.org/v2/everything?q=${this.state.searchQuery}&sources=${id}&apiKey=0279b927613e40debd2a3f4264057868`\n      ,{signal:this.abortController.signal}\n    )\n      .then(response => response.json())\n      .then(data =>{this.setState({ ChannelData: data.articles })})\n      .catch(err=>{\n        console.log(err);\n      })\n     // console.log(this.state);\n        }\n  }\n  componentWillUnmount(){\n      this.abortController.abort();\n  }\n\n  render() {\n    const { ChannelData,searchQuery } = this.state;\n    console.log(ChannelData,searchQuery);\n    if (ChannelData) {\n      return (\n        <React.Fragment>\n        <SearchBar/>\n          <div class=\"container\">\n            <div class=\"row\">\n              {ChannelData.map(article => (\n                <div class=\"col-md-4 mb-3 card-hover\">\n                  <div class=\"card h-100 rounded p-1\" >\n                    <img class=\"card-img-top img-fluid\" src={article.urlToImage} />\n                    <div class=\"card-body\">\n                      <h5 class=\"card-title text-light\">{article.title}</h5>\n                      <p class=\"card-text text-light\">{article.description}</p>\n                      <a href={article.url} class=\"btn btn-dark btn-block\">\n                        Visit article\n                      </a>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </React.Fragment>\n      );\n    } else {\n      return (<div class=\"text-center\"><Loading/></div>);\n    }\n  }\n}\n\nexport default Channel;\n","import React from \"react\";\nimport NavBar from \"./components/NavBar\";\nimport Channels from \"./components/Channels\";\nimport Channel from \"./components/Channel\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <Switch>\n        <Route exact path=\"/\" component={Channels} />\n        <Route path=\"/channel/:id\" component={Channel} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import 'bootstrap/dist/css/bootstrap.css';\nimport 'bootswatch/dist/solar/bootstrap.css';\nimport 'font-awesome/css/font-awesome.min.css'\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router><App /></Router>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}