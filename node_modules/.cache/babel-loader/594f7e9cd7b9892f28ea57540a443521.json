{"ast":null,"code":"var _jsxFileName = \"/media/mark/mark_nakachon/internshala/news-app/news-app/src/components/Channel.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SearchBar from './SearchBar';\nexport function updateSearchQuery(query) {\n  this.setState({\n    searchQuery: query\n  });\n}\n\nclass Channel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ChannelData: null,\n      searchQuery: null\n    };\n    updateSearchQuery = updateSearchQuery.bind(this);\n  }\n\n  componentDidMount() {\n    const id = this.props.match.params.id;\n    fetch(\"https://newsapi.org/v2/everything?sources=\".concat(id, \"&apiKey=0279b927613e40debd2a3f4264057868\")).then(response => response.json()).then(data => this.setState({\n      ChannelData: data.articles\n    }));\n  }\n\n  componentdidUpdate() {\n    /*  const { id } = this.props.match.params;\n        fetch(\n      `https://newsapi.org/v2/everything?sources=${id}&q=${this.state.searchQuery}&apiKey=0279b927613e40debd2a3f4264057868`\n    )\n      .then(response => response.json())\n      .then(data => this.setState({ ChannelData: data.articles }));*/\n    console.log(this.state);\n  }\n\n  render() {\n    const _this$state = this.state,\n          ChannelData = _this$state.ChannelData,\n          searchQuery = _this$state.searchQuery;\n    console.log(ChannelData, searchQuery);\n\n    if (ChannelData) {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(SearchBar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        class: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, ChannelData.map(article => React.createElement(\"div\", {\n        class: \"col-md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        class: \"card-img-top\",\n        src: article.urlToImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        class: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        class: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, article.title), React.createElement(\"p\", {\n        class: \"card-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, article.description), React.createElement(\"a\", {\n        href: article.url,\n        class: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Go somewhere\"))))))));\n    } else {\n      return \"Loading\";\n    }\n  }\n\n}\n\nexport default Channel;","map":{"version":3,"sources":["/media/mark/mark_nakachon/internshala/news-app/news-app/src/components/Channel.js"],"names":["React","Component","Link","SearchBar","updateSearchQuery","query","setState","searchQuery","Channel","constructor","props","state","ChannelData","bind","componentDidMount","id","match","params","fetch","then","response","json","data","articles","componentdidUpdate","console","log","render","map","article","urlToImage","title","description","url"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAO,SAASC,iBAAT,CAA2BC,KAA3B,EAAiC;AACvC,OAAKC,QAAL,CAAc;AAACC,IAAAA,WAAW,EAACF;AAAb,GAAd;AACA;;AACD,MAAMG,OAAN,SAAsBP,SAAtB,CAAgC;AAC9BQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,WAAW,EAAE,IAAf;AAAoBL,MAAAA,WAAW,EAAC;AAAhC,KAAb;AACAH,IAAAA,iBAAiB,GAAGA,iBAAiB,CAACS,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AACDC,EAAAA,iBAAiB,GAAG;AAAA,UACVC,EADU,GACH,KAAKL,KAAL,CAAWM,KAAX,CAAiBC,MADd,CACVF,EADU;AAGlBG,IAAAA,KAAK,qDAC0CH,EAD1C,8CAAL,CAGGI,IAHH,CAGQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAHpB,EAIGF,IAJH,CAIQG,IAAI,IAAI,KAAKhB,QAAL,CAAc;AAAEM,MAAAA,WAAW,EAAEU,IAAI,CAACC;AAApB,KAAd,CAJhB;AAKD;;AACDC,EAAAA,kBAAkB,GAAE;AAClB;;;;;;AAMAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAjB;AACD;;AAEDgB,EAAAA,MAAM,GAAG;AAAA,wBAC6B,KAAKhB,KADlC;AAAA,UACCC,WADD,eACCA,WADD;AAAA,UACaL,WADb,eACaA,WADb;AAEPkB,IAAAA,OAAO,CAACC,GAAR,CAAYd,WAAZ,EAAwBL,WAAxB;;AACA,QAAIK,WAAJ,EAAiB;AACf,aACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAEE;AAAK,QAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,KAAK,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,WAAW,CAACgB,GAAZ,CAAgBC,OAAO,IACtB;AAAK,QAAA,KAAK,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,KAAK,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,KAAK,EAAC,cAAX;AAA0B,QAAA,GAAG,EAAEA,OAAO,CAACC,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAK,QAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,KAAK,EAAC,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwBD,OAAO,CAACE,KAAhC,CADF,EAEE;AAAG,QAAA,KAAK,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsBF,OAAO,CAACG,WAA9B,CAFF,EAGE;AAAG,QAAA,IAAI,EAAEH,OAAO,CAACI,GAAjB;AAAsB,QAAA,KAAK,EAAC,iBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHF,CAFF,CADF,CADD,CADH,CADF,CAFF,CADF;AAuBD,KAxBD,MAwBO;AACL,aAAO,SAAP;AACD;AACF;;AAvD6B;;AA0DhC,eAAezB,OAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SearchBar from './SearchBar';\nexport function updateSearchQuery(query){\n this.setState({searchQuery:query});\n}\nclass Channel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ChannelData: null,searchQuery:null };\n    updateSearchQuery = updateSearchQuery.bind(this);\n  }\n  componentDidMount() {\n    const { id } = this.props.match.params;\n\n    fetch(\n      `https://newsapi.org/v2/everything?sources=${id}&apiKey=0279b927613e40debd2a3f4264057868`\n    )\n      .then(response => response.json())\n      .then(data => this.setState({ ChannelData: data.articles }));\n  }\n  componentdidUpdate(){\n    /*  const { id } = this.props.match.params;\n        fetch(\n      `https://newsapi.org/v2/everything?sources=${id}&q=${this.state.searchQuery}&apiKey=0279b927613e40debd2a3f4264057868`\n    )\n      .then(response => response.json())\n      .then(data => this.setState({ ChannelData: data.articles }));*/\n    console.log(this.state);\n  }\n\n  render() {\n    const { ChannelData,searchQuery } = this.state;\n    console.log(ChannelData,searchQuery);\n    if (ChannelData) {\n      return (\n        <React.Fragment>\n        <SearchBar/>\n          <div class=\"container\">\n            <div class=\"row\">\n              {ChannelData.map(article => (\n                <div class=\"col-md-4\">\n                  <div class=\"card\">\n                    <img class=\"card-img-top\" src={article.urlToImage} />\n                    <div class=\"card-body\">\n                      <h5 class=\"card-title\">{article.title}</h5>\n                      <p class=\"card-text\">{article.description}</p>\n                      <a href={article.url} class=\"btn btn-primary\">\n                        Go somewhere\n                      </a>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </React.Fragment>\n      );\n    } else {\n      return \"Loading\";\n    }\n  }\n}\n\nexport default Channel;\n"]},"metadata":{},"sourceType":"module"}