{"ast":null,"code":"var _jsxFileName = \"/media/mark/mark_nakachon/internshala/news-app/news-app/src/components/Channels.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Loading from './Loading';\nimport Dropdown from './Dropdown';\nexport function filterByCategory(query) {\n  this.setState({\n    category: query\n  });\n  console.log(query);\n}\n\nclass Channels extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      channels: null,\n      category: null,\n      filteredChannels: null\n    };\n    filterByCategory = filterByCategory.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\"https://newsapi.org/v2/sources?apiKey=0279b927613e40debd2a3f4264057868\").then(response => response.json()).then(data => {\n      this.setState({\n        channels: data.sources\n      });\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.category !== this.state.category) {\n      const filteredData = this.state.channels.filter(obj => {\n        if (obj.category == this.state.category) {\n          return true;\n        }\n      });\n      this.setState({\n        filteredChannels: filteredData\n      });\n    }\n  }\n\n  componentWillUnmount() {}\n\n  render() {\n    const _this$state = this.state,\n          channels = _this$state.channels,\n          filteredChannels = _this$state.filteredChannels;\n    console.log(channels);\n\n    if (filteredChannels !== null) {\n      return React.createElement(\"div\", {\n        class: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        class: \"text-center text-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"New's Channels\"), React.createElement(Dropdown, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), filteredChannels.map(channel => React.createElement(\"div\", {\n        class: \"card bg-light rounded p-1 mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/channel/\".concat(channel.id),\n        style: {\n          textDecoration: 'None'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"card-header d-flex justify-content-between bg-dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        class: \"text-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, channel.name), React.createElement(\"h5\", {\n        class: \"text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        class: \"text-info mr-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Category:\"), channel.category.charAt(0).toUpperCase() + channel.category.slice(1))), React.createElement(\"div\", {\n        class: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        class: \"card-title text-dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, channel.description))))));\n    } else if (channels !== null) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        class: \"text-center text-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"New's Channels\"), React.createElement(Dropdown, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        class: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, channels.map(channel => React.createElement(\"div\", {\n        class: \"card bg-light rounded p-1 mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/channel/\".concat(channel.id),\n        style: {\n          textDecoration: 'None'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"card-header d-flex justify-content-between bg-dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        class: \"text-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, channel.name), React.createElement(\"h5\", {\n        class: \"text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        class: \"text-info mr-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Category:\"), channel.category.charAt(0).toUpperCase() + channel.category.slice(1))), React.createElement(\"div\", {\n        class: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        class: \"card-title text-dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, channel.description)))))));\n    } else {\n      return React.createElement(\"div\", {\n        class: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\nexport default Channels;","map":{"version":3,"sources":["/media/mark/mark_nakachon/internshala/news-app/news-app/src/components/Channels.js"],"names":["React","Component","Link","Loading","Dropdown","filterByCategory","query","setState","category","console","log","Channels","constructor","props","state","channels","filteredChannels","bind","componentDidMount","fetch","then","response","json","data","sources","componentDidUpdate","prevProps","prevState","filteredData","filter","obj","componentWillUnmount","render","map","channel","id","textDecoration","name","charAt","toUpperCase","slice","description"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,OAAO,SAASC,gBAAT,CAA0BC,KAA1B,EAAgC;AACnC,OAAKC,QAAL,CAAc;AAACC,IAAAA,QAAQ,EAACF;AAAV,GAAd;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACH;;AACD,MAAMK,QAAN,SAAuBV,SAAvB,CAAiC;AAC/BW,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,IADC;AAEXP,MAAAA,QAAQ,EAAC,IAFE;AAGXQ,MAAAA,gBAAgB,EAAC;AAHN,KAAb;AAKAX,IAAAA,gBAAgB,GAAGA,gBAAgB,CAACY,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AACDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CACH,wEADG,CAAL,CAGGC,IAHH,CAGQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAHpB,EAIGF,IAJH,CAIQG,IAAI,IACR;AACE,WAAKhB,QAAL,CAAc;AAAEQ,QAAAA,QAAQ,EAAEQ,IAAI,CAACC;AAAjB,OAAd;AACD,KAPL;AAQD;;AACDC,EAAAA,kBAAkB,CAACC,SAAD,EAAWC,SAAX,EAAqB;AACnC,QAAGA,SAAS,CAACnB,QAAV,KAAuB,KAAKM,KAAL,CAAWN,QAArC,EAA8C;AAE9C,YAAMoB,YAAY,GAAG,KAAKd,KAAL,CAAWC,QAAX,CAAoBc,MAApB,CAA4BC,GAAD,IAAO;AACnD,YAAIA,GAAG,CAACtB,QAAJ,IAAgB,KAAKM,KAAL,CAAWN,QAA/B,EAAwC;AACpC,iBAAO,IAAP;AACH;AACJ,OAJoB,CAArB;AAKA,WAAKD,QAAL,CAAc;AAACS,QAAAA,gBAAgB,EAACY;AAAlB,OAAd;AACC;AACJ;;AAEDG,EAAAA,oBAAoB,GAAE,CAErB;;AACDC,EAAAA,MAAM,GAAG;AAAA,wBAC+B,KAAKlB,KADpC;AAAA,UACCC,QADD,eACCA,QADD;AAAA,UACUC,gBADV,eACUA,gBADV;AAEPP,IAAAA,OAAO,CAACC,GAAR,CAAYK,QAAZ;;AACA,QAAGC,gBAAgB,KAAG,IAAtB,EAA2B;AACpB,aACH;AAAK,QAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,KAAK,EAAC,wBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGGA,gBAAgB,CAACiB,GAAjB,CAAqBC,OAAO,IACzB;AAAK,QAAA,KAAK,EAAC,gCAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,EAAE,qBAAcA,OAAO,CAACC,EAAtB,CAAR;AAAoC,QAAA,KAAK,EAAE;AAACC,UAAAA,cAAc,EAAC;AAAhB,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,KAAK,EAAC,oDAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,KAAK,EAAC,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwBF,OAAO,CAACG,IAAhC,CADF,EAEE;AAAI,QAAA,KAAK,EAAC,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwB;AAAM,QAAA,KAAK,EAAC,gBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAxB,EAAsEH,OAAO,CAAC1B,QAAR,CAAiB8B,MAAjB,CAAwB,CAAxB,EAA2BC,WAA3B,KAAyCL,OAAO,CAAC1B,QAAR,CAAiBgC,KAAjB,CAAuB,CAAvB,CAA/G,CAFF,CADA,EAKA;AAAK,QAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,KAAK,EAAC,sBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkCN,OAAO,CAACO,WAA1C,CADF,CALA,CADF,CADH,CAHH,CADG;AAmBN,KApBD,MAqBK,IAAI1B,QAAQ,KAAK,IAAjB,EAAuB;AAC1B,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,KAAK,EAAC,wBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE;AAAK,QAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACCA,QAAQ,CAACkB,GAAT,CAAaC,OAAO,IACjB;AAAK,QAAA,KAAK,EAAC,gCAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,EAAE,qBAAcA,OAAO,CAACC,EAAtB,CAAR;AAAoC,QAAA,KAAK,EAAE;AAACC,UAAAA,cAAc,EAAC;AAAhB,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,KAAK,EAAC,oDAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,KAAK,EAAC,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwBF,OAAO,CAACG,IAAhC,CADF,EAEE;AAAI,QAAA,KAAK,EAAC,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwB;AAAM,QAAA,KAAK,EAAC,gBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAxB,EAAsEH,OAAO,CAAC1B,QAAR,CAAiB8B,MAAjB,CAAwB,CAAxB,EAA2BC,WAA3B,KAAyCL,OAAO,CAAC1B,QAAR,CAAiBgC,KAAjB,CAAuB,CAAvB,CAA/G,CAFF,CADA,EAKA;AAAK,QAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,KAAK,EAAC,sBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkCN,OAAO,CAACO,WAA1C,CADF,CALA,CADF,CADH,CADD,CAHF,CADF;AAsBD,KAvBI,MAuBE;AACL,aAAQ;AAAK,QAAA,KAAK,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAzB,CAAR;AACD;AACF;;AArF8B;;AAwFjC,eAAe9B,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Loading from './Loading';\nimport Dropdown from './Dropdown';\n\nexport function filterByCategory(query){\n    this.setState({category:query});\n    console.log(query);\n}\nclass Channels extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      channels: null,\n      category:null,\n      filteredChannels:null\n    };\n    filterByCategory = filterByCategory.bind(this);\n  }\n  componentDidMount() {\n    fetch(\n      \"https://newsapi.org/v2/sources?apiKey=0279b927613e40debd2a3f4264057868\"\n    )\n      .then(response => response.json())\n      .then(data =>\n        {\n          this.setState({ channels: data.sources })\n        } );\n  }\n  componentDidUpdate(prevProps,prevState){\n      if(prevState.category !== this.state.category){\n\n      const filteredData = this.state.channels.filter((obj)=>{\n          if (obj.category == this.state.category){\n              return true;\n          }\n      });\n      this.setState({filteredChannels:filteredData});\n      }\n  }\n\n  componentWillUnmount(){\n\n  }\n  render() {\n    const { channels,filteredChannels } = this.state;\n    console.log(channels);\n    if(filteredChannels!==null){\n           return (\n        <div class=\"container\">\n          <h4 class=\"text-center text-light\">New's Channels</h4>\n          <Dropdown />\n          {filteredChannels.map(channel => (\n              <div class=\"card bg-light rounded p-1 mb-4\">\n                <Link to={`/channel/${channel.id}`} style={{textDecoration:'None'}}>\n                <div class=\"card-header d-flex justify-content-between bg-dark\">\n                  <h5 class=\"text-light\">{channel.name}</h5>\n                  <h5 class=\"text-danger\"><span class=\"text-info mr-2\">Category:</span>{channel.category.charAt(0).toUpperCase()+channel.category.slice(1)}</h5>\n                  </div>\n                <div class=\"card-body\">\n                  <h5 class=\"card-title text-dark\">{channel.description}</h5>\n                </div>\n                </Link>\n              </div>\n          ))}\n          </div>\n      );\n    }\n    else if (channels !== null) {\n      return (\n        <div>\n          <h4 class=\"text-center text-light\">New's Channels</h4>\n          <Dropdown />\n          <div class=\"container\">\n          {channels.map(channel => (\n              <div class=\"card bg-light rounded p-1 mb-4\">\n                <Link to={`/channel/${channel.id}`} style={{textDecoration:'None'}}>\n                <div class=\"card-header d-flex justify-content-between bg-dark\">\n                  <h5 class=\"text-light\">{channel.name}</h5>\n                  <h5 class=\"text-danger\"><span class=\"text-info mr-2\">Category:</span>{channel.category.charAt(0).toUpperCase()+channel.category.slice(1)}</h5>\n                  </div>\n                <div class=\"card-body\">\n                  <h5 class=\"card-title text-dark\">{channel.description}</h5>\n\n                </div>\n                </Link>\n              </div>\n          ))}\n          </div>\n        </div>\n      );\n    } else {\n      return (<div class=\"text-center\"><Loading/></div>);\n    }\n  }\n}\n\nexport default Channels;\n"]},"metadata":{},"sourceType":"module"}